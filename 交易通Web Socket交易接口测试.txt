交易通Web Socket程序化交易接口测试：

1、先解压缩交易通服务程序并配置安装成功，具体请参考文档“交易通服务配置说明.doc”；

2、打开本地目录Test下的网页版测试页面websocket.html或点击服务管理器的网页版测试按钮进入；

3、输入实际的连接地址，rid是唯一客户端连接标识，必须有，flag是标志掩码，1指定服务器输出日志，2指示通讯数据进行GZip压缩(网页版不支持此标记测试)，3就表示输出日志同时进行Gzip压缩。
举例：ws://192.168.1.6:888?rid=DFC76286A2F293472D6166F72CA58EAB&flag=1
点击连接，成功的话右侧会输出连接结果；

4、登录交易通系统请求：
LoginID为交易通服务管理器分配的登录账号ID，LoginPW为登录密码，Encode为加密方式，0为明文密码，1为SH1加密后的密码串
举例：{"req":"Server_Login","rid":"1","para":{"LoginID" : "","LoginPW" : "","Encode" : 0}}
右侧会返回请求返回，如果有事件通知返回，也在右侧显示出来；

5、发送交易服务器初始化请求：
Broker为券商ID，Net指定网络类型，ClientVer指定登录交易服务器所用的版本号，为空时使用默认值
举例：{"req":"Trade_Init","rid":"2","para":{"Broker" : 32,"Net" : 0,"Server" : 2,"ClientVer" : "","TryConn" : 3}}
右侧会返回请求返回，如果有事件通知返回，也在右侧显示出来；

6、普通方式登录交易账号请求：
注意替换为你自己的券商信息，Broker券商标识ID，具体定义请参考文档“交易通WebSocket服务通讯协议.xls”中的券商ID定义，
AccountMode是资金账号还是客户号等类型，CreditAccount是否信用账号 1是，0否 ReportSuccess委托实际成交轮询定时器，毫秒单位
DeptID营业部ID，Encode加密方式，当前只支持0不加密，IP/Port券商交易服务器IP和端口，根据初始化返回的列表选择一个
LoginID登录账号ID，LoginPW登录密码目前只支持明文，TradeID交易账号ID，一般和登录账号ID一致，CommPW通讯密码，个别券商需要
TryConn为登录交易服务器成功后出现连接故障时自动重新连接次数

{"req":"Trade_Login","rid":"3","para":{
   "Server" : 2,
   "AccountMode" : 8,
   "Broker" : 32,
   "CreditAccount" : 0,
   "DeptID" : "1",
   "Encode" : 0,
   "ReportSuccess" : 1000,
   "TryConn" : 3,
   "IP" : "202.108.253.141",
   "LoginID" : "*******",
   "LoginPW" : "******",
   "Port" : 7708,
   "TradeID" : "",
   "CommPW" : ""}}

7、安全方式登录交易账号请求：
ReportSuccess委托实际成交轮询定时器，毫秒单位
TryConn为登录交易服务器成功后出现连接故障时自动重新连接次数
IP/Port券商交易服务器IP和端口
传以上参数时用此指定的，不传时用后台配置的
ID为必须传的参数，ID由登录交易通系统后获得
{"req":"Trade_SafeLogin","rid":"4","para":{
   "ID" : 1,
   "ReportSuccess" : 1000,
   "TryConn" : 3,
   "IP" : "202.108.253.141",
   "Port" : 7708}}

8、查询交易数据
{"req":"Trade_QueryData","rid":"5","para":{"JsonType" : 1,"QueryType" : 1}}

9、限价委托买入
支持批量委托，para参数指定为数组类型的json数据包，每个节点代表一个委托操作
{"req":"Trade_CommitOrder","rid":"7","para":[
   {
      "Code" : "002610",
      "Count" : 100,
      "EType" : 1,
      "OType" : 1,
      "PType" : 1,
      "Price" : "2.520000"
   },
   {
      "Code" : "002610",
      "Count" : 100,
      "EType" : 1,
      "OType" : 1,
      "PType" : 1,
      "Price" : "2.530000"
   }
]
}
委托提交后，会以事件形式推送回来委托请求的结果，类似这样：{"event":"Trade_SendOrderEvent","rid":"7","sid":"1","data":[{"委托编号":"379","批次号":"","返回信息":"","URL":"","保留信息":""}]}
如果委托出错，类似这样的返回：
{"event":"Trade_SendOrderEvent","rid":"7","sid":"2","data":{"ErrInfo":"[60200][可用资金不足][fund_account=**********,money_type=0,p_occur_balance=258.10,p_enable_balance=97.82]"}}

10、板块类别查询
{"req":"Tdx_GetPlateList","rid":"21","para":{"JsonType" : 1,"PType" : 4}}

11、板块成员查询
{"req":"Tdx_GetPlateMember","rid":"22","para":{"JsonType" : 1,"PID" : 206}}

12、股票所属板块查询
{"req":"Tdx_GetStockPlate","rid":"23","para":{"JsonType" : 0,"Code" : "002610"}}

13、根据ID取股票或板块信息
/// 取股票
{"req":"Tdx_GetInfoByID","rid":"24","para":{"SType" : 2,"JsonType" : 0,"ID" : "5"}}
/// 取板块
{"req":"Tdx_GetInfoByID","rid":"25","para":{"SType" : 1,"JsonType" : 0,"ID" : "7"}}

14、根据名称模糊查询股票或板块
/// 查询股票，可能多条记录，分别属于不同板块
{"req":"Tdx_SearchByName","rid":"26","para":{"SType" : 2,"JsonType" : 0,"Name" : "京东方"}}
/// 查询板块
{"req":"Tdx_SearchByName","rid":"27","para":{"SType" : 1,"JsonType" : 0,"Name" : "沪深"}}

15、根据代码模糊查询股票或板块
/// 查询股票，可能多条记录，分别属于不同板块
{"req":"Tdx_SearchByCode","rid":"28","para":{"SType" : 2,"JsonType" : 0,"Code" : "00007"}}
/// 查询板块
{"req":"Tdx_SearchByCode","rid":"29","para":{"SType" : 1,"JsonType" : 0,"Code" : "399"}}

16、查询5档行情数据
{"req":"Trade_QueryQuote","rid":"30","para":{"Codes" : "000001",
   "JsonType" : 1,
   "Server" : 2}}

17、添加行情推送，支持多只股票，Timer为定时刷新毫秒
{"req":"Market_AddTimerQuote","rid":"31","para":{"Codes" : "000001,600000", "Timer" : 1000, "Server" : 2}}

18、退出交易登录
退出交易登录时需要指定交易登录返回的ID和交易服务器类型
{"req":"Trade_LogOut","rid":"35","para":{
"ID" : 1,
"Server" : 2
}
}

其他功能请求的范例，请参考接口文档类似操作即可。如有不明确的使用，可咨询客服。也可以启动我们提供的范例程序ZMTradeClientDemo.exe，默认勾选输出日志执行每个功能，然后在服务程序的data目录中，找到ZMTradeService.txt日志文件中找到传送的参数和请求的功能节点，参照执行即可。
